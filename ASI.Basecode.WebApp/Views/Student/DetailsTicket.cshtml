@model ASI.Basecode.Services.ServiceModels.DetailsTicketViewModel

@{
    ViewData["Title"] = "SCS Help Desk";
    var categoryMap = new Dictionary<int, string>
    {
        { 1, "Enrollment" },
        { 2, "Grades" },
        { 3, "Organizational" },
        { 4, "Inquiry" },
        { 5, "Miscellaneous" }
    };

    var priorityMap = new Dictionary<int, string>
    {
        { 1, "High" },
        { 2, "Medium" },
        { 3, "Low" },
        { 4, "General" }
    };

    var statusMap = new Dictionary<int, string>
    {
        { 1, "Open" },
        { 2, "In Progress" },
        { 3, "Resolved" },
        { 4, "Closed" }
    };
}
@section styles {
    <link rel="stylesheet" href="~/css/detailsTicket.css" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet" />
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>@ViewBag.Title</title>
    <script>
        function clearForm() {
            document.getElementById("createTicketForm").reset();
        }
        function openEditModal(ticketId, title, description, category) {
            
            document.getElementById('editTicketId').value = ticketId;
            document.getElementById('editTitle').value = title;
            document.getElementById('editDescription').value = description;
            document.getElementById('editCategory').value = category;

           
            var modal = new bootstrap.Modal(document.getElementById('editTicketModal'));
            modal.show();
        }
        function viewAttachmentModal(attachmentPath) {
            const modalBody = document.getElementById('attachmentContent');

            const fileUrl = attachmentPath; 

            if (fileUrl) {
                const fileExtension = fileUrl.split('.').pop().toLowerCase();

                if (['jpg', 'jpeg', 'png', 'gif'].includes(fileExtension)) {
                    modalBody.innerHTML = `<img src="${fileUrl}" alt="Attachment" class="img-fluid" />`;
                } else if (['pdf'].includes(fileExtension)) {
                    modalBody.innerHTML = `<iframe src="${fileUrl}" width="100%" height="400px"></iframe>`;
                } else {
                    modalBody.innerHTML = '<p>No attachment submitted.</p>';
                }
            } else {
                modalBody.innerHTML = '<p>Unsupported file type</p>';
            }

            var modal = new bootstrap.Modal(document.getElementById('viewAttachmentModal'));
            modal.show();
        }



        function closeAttachmentModal() {
            var modalElement = document.getElementById('viewAttachmentModal');
            if (modalElement) {
                modalElement.classList.remove('show');
                modalElement.setAttribute('aria-hidden', 'true');
                modalElement.style.display = 'none';

               
                var backdrop = document.querySelector('.modal-backdrop');
                if (backdrop) {
                    backdrop.parentNode.removeChild(backdrop);
                }

               
                document.body.classList.remove('modal-open');
                document.body.style.paddingRight = '';
            }
        }

       
        function closeEditModal() {
            var modalElement = document.getElementById('editTicketModal');
            if (modalElement) {
                modalElement.classList.remove('show');
                modalElement.setAttribute('aria-hidden', 'true');
                modalElement.style.display = 'none';

                
                var backdrop = document.querySelector('.modal-backdrop');
                if (backdrop) {
                    backdrop.parentNode.removeChild(backdrop);
                }

                
                document.body.classList.remove('modal-open');
                document.body.style.paddingRight = ''; 
            }
        }

        function openFeedbackModal(ticketId, userId) {
            console.log("Opening Feedback Modal");
            console.log("UserId:", userId);

            var modal = new bootstrap.Modal(document.getElementById('feedbackModal'));
            modal.show();
        }


        function closeFeedbackModal() {
            var modalElement = document.getElementById('feedbackModal');
            if (modalElement) {
                modalElement.classList.remove('show');
                modalElement.setAttribute('aria-hidden', 'true');
                modalElement.style.display = 'none';

                var backdrop = document.querySelector('.modal-backdrop');
                if (backdrop) {
                    backdrop.parentNode.removeChild(backdrop);
                }

                document.body.classList.remove('modal-open');
                document.body.style.paddingRight = '';
            }
        }

        function clearFeedbackForm() {
           
            const form = document.getElementById('feedbackForm');

           
            form.reset();

           
            const radioButtons = form.querySelectorAll('input[type="radio"]');
            radioButtons.forEach(button => button.checked = false);
        }
    </script>
</head>
<body>
    <div>
        <nav class="ticketNavBar navbar bg-body-tertiary shadow-lg">
            <a class="navbar-brand" href="#">
                <img src="~/img/scsHelpDeskLogo.svg" alt="Bootstrap" class="scsLogo">
            </a>

            <div class="d-grid gap-2 d-md-flex justify-content-md-end">
                <a href="@Url.Action("StudentDashboard", "Student")" class="btn btn-custom me-md-2 mr-5" type="button">Back to Homepage</a>
                <a asp-action="SignOutUser" asp-controller="Account" class="btn btn-danger logout-btn shadow-lg" type="button">Logout</a>
            </div>

        </nav>

        <div class="d-flex justify-content-center align-items-center vh-100">
            <div class="row w-100">
                <!-- First Card -->
                <div class="col-md-8 d-flex justify-content-center">
                    <div class="formContent card shadow-lg">
                        <div class="card-body">
                            <div class="d-flex justify-content-between align-items-center">
                                <!-- Left Group: Back Button and Heading -->
                                <div class="d-flex align-items-center">
                                    <!-- Back Button -->
                                    <a href="@Url.Action("MyTickets", "Student")" class="btn btn-primary me-4">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-return-left" viewBox="0 0 16 16">
                                            <path fill-rule="evenodd" d="M14.5 1.5a.5.5 0 0 1 .5.5v4.8a2.5 2.5 0 0 1-2.5 2.5H2.707l3.347 3.346a.5.5 0 0 1-.708.708l-4.2-4.2a.5.5 0 0 1 0-.708l4-4a.5.5 0 1 1 .708.708L2.707 8.3H12.5A1.5 1.5 0 0 0 14 6.8V2a.5.5 0 0 1 .5-.5" />
                                        </svg>
                                    </a>
                                    <!-- Ticket Details Heading -->
                                    <h1 class="custom-card-title mb-0 ml-3">Ticket Details</h1>
                                </div>
                                <!-- Right Group: Action Buttons -->
                                <div class="d-flex">
                                    <button class="btn btn-outline-primary me-2 mr-2"
                                    @(Model.StatusId == 1 || Model.HasFeedback ? "disabled" : "")
                                            title="@(Model.StatusId == 1
                                            ? "Feedback is only available after the ticket is closed"
                                            : (Model.HasFeedback
                                                ? "Already submitted a feedback"
                                                : "Submit your feedback"))"
                                            onclick="openFeedbackModal(@Model.TicketId, '@User.Identity.Name')">
                                        Submit Feedback
                                    </button>

                                    <button class="btn btn-primary" onclick="openEditModal(@Model.TicketId, '@Model.Title', '@Model.Description', '@(Model.Categories?.FirstOrDefault(c => c.CategoryId == Model.CategoryId)?.CategoryType ?? "Unknown")')">Edit Ticket</button>
                                </div>
                            </div>
                            <!-- Ticket Details Content -->
                            <div class="mt-4">
                                <h2><strong></strong> @Model.Title</h2>
                                <p><strong>Date Created:</strong> @Model.DateCreated.ToString("yyyy-MM-dd")</p>
                                <p><strong>Ticket ID:</strong> @Model.TicketId</p>
                                <p><strong>Category:</strong> @categoryMap[Model.CategoryId]</p>
                                <p><strong>Priority:</strong> @priorityMap[Model.PriorityId]</p>
                                <p><strong>Status:</strong> @statusMap[Model.StatusId]</p>
                                <p><strong>Assigned To:</strong> @(!string.IsNullOrEmpty(Model.AssignedToName) ? Model.AssignedToName : "Unassigned")</p>
                                <p><strong>Description:</strong> @Model.Description</p>
                                <p>
                                    <strong>Attachment: </strong>
                                    <button class="btn btn-secondary" onclick="viewAttachmentModal('@Url.Content("~/" + Model.AttachmentPath)')">View attachment</button>
                                </p>


                            </div>
                        </div>
                    </div>
                </div>

                <!-- Second Card -->
                <div class="col-md-4 d-flex justify-content-center">
                    <div class="formContent card shadow-lg">
                        <div class="card-body">
                            <h1 class="custom-card-title">Ticket Feedback</h1>
                            @if (Model.TicketRating.HasValue || !string.IsNullOrEmpty(Model.TicketComment))
                            {
                                <p><strong>Ticket Rating:</strong> @Model.TicketRating/5</p>
                                <p><strong>Ticket Comment:</strong> @Model.TicketComment</p>
                                <p><strong>Agent Rating:</strong> @Model.AgentRating/5</p>
                                <p><strong>Agent Comment:</strong> @Model.AgentComment</p>
                            }
                            else
                            {
                                <p>No feedback submitted for this ticket.</p>
                            }
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>

    <!-- Edit Ticket Modal -->
    <div class="modal fade" id="editTicketModal" tabindex="-1" aria-labelledby="editTicketModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="editTicketModalLabel">Edit Ticket</h5>
                    <button type="button" class="btn" onclick="closeEditModal()">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-x-lg" viewBox="0 0 16 16">
                            <path d="M2.146 2.854a.5.5 0 1 1 .708-.708L8 7.293l5.146-5.147a.5.5 0 0 1 .708.708L8.707 8l5.147 5.146a.5.5 0 0 1-.708.708L8 8.707l-5.146 5.147a.5.5 0 0 1-.708-.708L7.293 8z" />
                        </svg>
                    </button>
                </div>
                <div class="modal-body">
                    <form id="editTicketForm" asp-action="EditTicket" asp-controller="Student" method="post">
                        <input type="hidden" id="editTicketId" name="TicketId" />

                        <div class="mb-3">
                            <label for="editTitle" class="form-label">Title</label>
                            <input type="text" class="form-control" id="editTitle" name="Title" required />
                        </div>

                        <div class="mb-3">
                            <label for="editDescription" class="form-label">Description</label>
                            <textarea class="form-control" id="editDescription" name="Description" rows="3" required></textarea>
                        </div>

                        <div class="mb-3">
                            <label for="editCategory" class="form-label">Category</label>
                            <input type="text" class="form-control" id="editCategory" name="Category" readonly />
                        </div>

                        <div class="d-flex justify-content-end">
                            
                            <button type="submit" class="btn btn-primary">Save Changes</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Attachment Modal -->
    <div class="modal fade" id="viewAttachmentModal" tabindex="-1" aria-labelledby="viewAttachmentModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="viewAttachmentModalLabel">Attachment</h5>
                    <button type="button" class="btn" onclick="closeAttachmentModal()">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-x-lg" viewBox="0 0 16 16">
                            <path d="M2.146 2.854a.5.5 0 1 1 .708-.708L8 7.293l5.146-5.147a.5.5 0 0 1 .708.708L8.707 8l5.147 5.146a.5.5 0 0 1-.708.708L8 8.707l-5.146 5.147a.5.5 0 0 1-.708-.708L7.293 8z" />
                        </svg>
                    </button>
                </div>
                <div class="modal-body text-center" id="attachmentContent">
                </div>
            </div>
        </div>
    </div>

    <!-- Feedback Modal -->
    <div class="modal fade" id="feedbackModal" tabindex="-1" aria-labelledby="feedbackModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="feedbackModalLabel">Submit Feedback</h5>
                    <button type="button" class="btn" onclick="closeFeedbackModal()">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-x-lg" viewBox="0 0 16 16">
                            <path d="M2.146 2.854a.5.5 0 1 1 .708-.708L8 7.293l5.146-5.147a.5.5 0 0 1 .708.708L8.707 8l5.147 5.146a.5.5 0 0 1-.708.708L8 8.707l-5.146 5.147a.5.5 0 0 1-.708-.708L7.293 8z" />
                        </svg>
                    </button>
                </div>
                <div class="modal-body">
                    <form id="feedbackForm"  asp-action="AddFeedback" asp-controller="Student" method="post">
                        <input type="hidden" name="TicketId" value="@Model.TicketId" readonly/>

                        <div class="mb-3">
                            <label for="ticketRating" class="form-label"><b>Ticket Rating</b></label>
                            <div class="rating-stars">
                                @for (int i = 5; i >= 1; i--)
                                {
                                    <input class="star" type="radio" name="TicketRating" id="TicketRating_@i" value="@i" required />
                                    <label for="TicketRating_@i" class="star-label">
                                        <i class="fa fa-star"></i>
                                    </label>
                                }
                            </div>
                        </div>

                        <div class="mb-3">
                            <label for="ticketComment" class="form-label"><b>Ticket Comment</b></label>
                            <textarea class="form-control" id="TicketComment" name="TicketComment" rows="3" required></textarea>
                        </div>

                        <div style="border-top: 1px solid #ccc; margin: 20px 0;"></div>

                        <div class="mb-3">
                            <label for="agentRating" class="form-label"><b>Agent Rating</b></label>
                            <div class="rating-stars">
                                @for (int i = 5; i >= 1; i--)
                                {
                                    <input class="star" type="radio" name="AgentRating" id="AgentRating_@i" value="@i" required />
                                    <label for="AgentRating_@i" class="star-label">
                                        <i class="fa fa-star"></i>
                                    </label>
                                }
                            </div>
                        </div>


                        <div class="mb-3">
                            <label for="agentComment" class="form-label"><b>Agent Comment</b></label>
                            <textarea class="form-control" id="AgentComment" name="AgentComment" rows="3" required></textarea>
                        </div>

                        <div class="d-flex justify-content-end">
                            <button type="button" class="btn btn-secondary me-2" onclick="clearFeedbackForm()">Clear</button>
                            <button type="submit" class="btn btn-primary">Submit Feedback</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</body>
</html>

